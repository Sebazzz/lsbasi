<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <!-- Reference: https://docs.microsoft.com/en-us/visualstudio/debugger/create-custom-views-of-native-objects?view=vs-2019 -->
  <!-- NATVIS is not smart enough to follow typedefs - the types below are expanded from their typedefs -->

  <!-- Pointer to ast::type -->
  <Type Name="std::shared_ptr&lt;ast::type&gt;">
    <DisplayString Condition="_Rep == 0">invalid!</DisplayString>
    <DisplayString Condition="_Ptr == 0">nullptr (!invalid)</DisplayString>
    <DisplayString Condition="_Ptr != 0">{(*_Ptr).m_identifier}</DisplayString>
    <Expand>
      <Item Name="[identifier]" ExcludeView="simple" Optional="true">(*_Ptr).m_identifier</Item>
    </Expand>
  </Type>

  <!-- Pointer to ast::num -->
  <Type Name="std::shared_ptr&lt;ast::num&gt;">
    <DisplayString Condition="_Rep == 0">invalid!</DisplayString>
    <DisplayString Condition="_Ptr == 0">nullptr (!invalid)</DisplayString>
    <DisplayString Condition="_Ptr != 0">{(*_Ptr).m_type} {(*_Ptr).m_value}</DisplayString>
    <DisplayString Optional="true" Condition="((*_Ptr)).m_type == 0">{{ value = {(*_Ptr).m_value.boolean_val}  (boolean_val)} }</DisplayString>
    <DisplayString Optional="true" Condition="((*_Ptr)).m_type == 1">{{ value = {(*_Ptr).m_value.int_val}  (builtin_int)} }</DisplayString>
    <DisplayString Optional="true" Condition="((*_Ptr)).m_type == 2">{{ value = {(*_Ptr).m_value.real_val}  (builtin_real)} }</DisplayString>
    <DisplayString Optional="true" Condition="((*_Ptr)).m_type == 3">{{ value = {(*_Ptr).m_value.string_ptr_val}  (string_ptr_val)} }</DisplayString>
    <Expand>
      <Item Name="[type]" ExcludeView="simple" Optional="true">(*_Ptr).m_type</Item>
      <Item Name="[value]" ExcludeView="simple" Optional="true">(*_Ptr).m_value</Item>
    </Expand>
  </Type>

  <!-- Pointer to ast::if_then_else -->
  <Type Name="std::shared_ptr&lt;ast::if_then_else&gt;">
    <DisplayString Condition="_Rep == 0">invalid!</DisplayString>
    <DisplayString Condition="_Ptr == 0">nullptr (!invalid)</DisplayString>
    <DisplayString Condition="_Ptr != 0">{(*_Ptr).m_test_expression}</DisplayString>
    <Expand>
      <Item Name="[test_expression]" ExcludeView="simple" Optional="true">(*_Ptr).m_test_expression</Item>
      <Item Name="[true_block]" ExcludeView="simple" Optional="true">(*_Ptr).m_true_block</Item>
      <Item Name="[false_block]" ExcludeView="simple" Optional="true">(*_Ptr).m_false_block</Item>
    </Expand>
  </Type>

  <!-- Pointer to ast::var_decl -->
  <Type Name="std::shared_ptr&lt;ast::var_decl&gt;">
    <DisplayString Condition="_Rep == 0">invalid!</DisplayString>
    <DisplayString Condition="_Ptr == 0">nullptr (!invalid)</DisplayString>
    <DisplayString Condition="_Ptr != 0">{(*_Ptr).m_type,sub} - {(*_Ptr).m_identifier,sub}</DisplayString>
    <Expand>
      <Item Name="[identifier]" ExcludeView="simple" Optional="true">(*_Ptr).m_identifier</Item>
      <Item Name="[type]" ExcludeView="simple" Optional="true">(*_Ptr).m_type</Item>
    </Expand>
  </Type>

  <!-- Pointer to ast::procedure -->
  <Type Name="std::shared_ptr&lt;ast::routine&gt;">
    <DisplayString Condition="_Rep == 0">invalid!</DisplayString>
    <DisplayString Condition="_Ptr == 0">nullptr (!invalid)</DisplayString>
    <DisplayString Condition="_Ptr != 0">{(*_Ptr).m_identifier,sub} ({(*_Ptr).m_params} params)</DisplayString>
    <Expand>
      <Item Name="[identifier]" ExcludeView="simple" Optional="true">(*_Ptr).m_identifier</Item>
      <Item Name="[params]" ExcludeView="simple" Optional="true">(*_Ptr).m_params</Item>
    </Expand>
  </Type>

  <!-- Pointer to ast::procedure_call -->
  <Type Name="std::shared_ptr&lt;ast::routine_call&gt;">
    <DisplayString Condition="_Rep == 0">invalid!</DisplayString>
    <DisplayString Condition="_Ptr == 0">nullptr (!invalid)</DisplayString>
    <DisplayString Condition="_Ptr != 0">Call to {(*_Ptr).m_procedure_identifier,sub} ({(*_Ptr).m_args} args)</DisplayString>
    <Expand>
      <Item Name="[procedure identifier]" ExcludeView="simple" Optional="true">(*_Ptr).m_procedure_identifier</Item>
      <Item Name="[args]" ExcludeView="simple" Optional="true">(*_Ptr).m_args</Item>
    </Expand>
  </Type>
</AutoVisualizer>